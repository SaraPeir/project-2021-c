{"version":3,"sources":["webpack://project-2021-c/./src/client/App.js","webpack://project-2021-c/./src/client/Counter.js","webpack://project-2021-c/./src/client/asyncComponents/Countdown/AsyncCountdown.js","webpack://project-2021-c/./src/client/asyncComponents/Countdown/index.js","webpack://project-2021-c/./src/client/components/CurrentTime/index.js","webpack://project-2021-c/./src/client/index.js","webpack://project-2021-c/./src/redux/slices/counter.js"],"names":["App","props","useState","isCountdownDisplayed","setCountdownDisplayed","countdown","toggleCountdown","arrayFromFetch","showInConsole","console","log","store","Counter","count","useSelector","state","counter","value","dispatch","useDispatch","increment","decrement","loadable","ssr","Countdown","loadableReady","hydrate","document","getElementById","counterSlice","createSlice","name","initialState","reducers","incrementByAmount","action","payload","actions","reducer"],"mappings":"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","file":"main.cd477d00a123dffa88f2.js","sourcesContent":["import React, {useState} from \"react\"\r\nimport CurrentTime from './components/CurrentTime'\r\nimport Countdown from './asyncComponents/Countdown'\r\nimport Counter from './Counter'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst App = (props) => {\r\n   \r\n    const [isCountdownDisplayed, setCountdownDisplayed] = useState(false);\r\n\r\n    const countdown = () => {\r\n        if(isCountdownDisplayed) {\r\n            return <Countdown />\r\n        }\r\n        return;\r\n    }\r\n\r\n    const toggleCountdown = () => setCountdownDisplayed(!isCountdownDisplayed)\r\n    const arrayFromFetch = props.arrayFromFetch;\r\n    const showInConsole = (arrayFromFetch) => console.log(arrayFromFetch);\r\n\r\n    return(\r\n        <Provider store={store}>\r\n            <button onClick={toggleCountdown}>See how miss to 2022</button>\r\n            <CurrentTime />\r\n            {countdown()}\r\n            {showInConsole(arrayFromFetch)}\r\n            <Counter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { decrement, increment } from '../redux/slices/counter'\r\n\r\n\r\nconst Counter = () => {\r\n    const count = useSelector((state) => {\r\n        console.log('state', state)\r\n        state.counter.value\r\n    } )\r\n    const dispatch = useDispatch()\r\n    \r\n    return(\r\n        <div>\r\n            <button\r\n                aria-label=\"Increment value\"\r\n                onClick={() => dispatch(increment())}\r\n                >\r\n                Increment\r\n            </button>\r\n            <span>{count}</span>\r\n            <button\r\n                aria-label=\"Decrement value\"\r\n                onClick={() => dispatch(decrement())}\r\n                >\r\n                Decrement\r\n            </button>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Counter\r\n","import loadable from \"@loadable/component\";\r\n\r\n// Countdown component is loaded by webpack only if user can see it. \r\n// It's not included in main bundle any more\r\n\r\nexport default loadable(() =>\r\n  // When import() is used Webpack creates a new chunk for the imported code, splitting it from the main bundle.\r\n  // (https://medium.com/swlh/an-introduction-to-webpack-code-splitting-loadable-component-and-resource-hints-f0c3a3e45ce4)\r\n  import(/* webpackChunkName: \"async_countdown\" */ \"./Countdown\"),\r\n  {ssr: true}\r\n);","import Countdown from './AsyncCountdown';\r\n\r\nexport default Countdown;","/* import CurrentTime from './CurrentTime'\r\n\r\nexport default CurrentTime;\r\n */\r\nimport loadable from \"@loadable/component\";\r\n\r\nexport default loadable(() =>\r\n  import(/* webpackChunkName: \"current_time\" */ \"./CurrentTime\"),\r\n  {ssr: false}\r\n);","/* import React from 'react'\r\nimport { hydrate } from 'react-dom'\r\nimport App from './App';\r\n\r\nhydrate(\r\n  <App arrayFromFetch={window.__INITIAL_ARRAYFETCH__} />,\r\n  document.getElementById('app')\r\n);\r\n\r\n */\r\nimport React from 'react';\r\nimport { hydrate } from 'react-dom';\r\nimport App from './App';\r\nimport { loadableReady } from '@loadable/component';\r\n\r\nexport default loadableReady(() => {\r\n    hydrate(\r\n        <App  />,\r\n      document.getElementById('app'),\r\n    );\r\n});\r\n\r\n/* export default () => {\r\n  hydrate(\r\n    <Provider store={store}>\r\n      <App  />\r\n    </Provider>,\r\n    document.getElementById('app'),\r\n  );\r\n} */\r\n \r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"sourceRoot":""}